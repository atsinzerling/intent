java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'fffds' for key 'items.SN'
having duplicat SN

java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '17' for key 'items.PRIMARY'

\\DESKTOP-E5VI6AD\application\Images

"jdbc:mysql://DESKTOP-E5VI6AD:3306/products";
//        "jdbc:mysql://localhost:3306/products";
    //jdbc:mysql://DESKTOP-E5VI6AD:3306/?user=newuser


CREATE TABLE `items` (
  `SKU` bigint NOT NULL,
  `SN` varchar(50) DEFAULT NULL,
  `PN` varchar(50) DEFAULT NULL,
  `UPC` varchar(50) DEFAULT NULL,
  `Grade` varchar(50) DEFAULT NULL,
  `Location` varchar(50) DEFAULT NULL,
  `Notes` varchar(500) DEFAULT NULL,
  `User` varchar(50) DEFAULT NULL,
  `DateTime` timestamp NULL DEFAULT NULL,
  `Images` varchar(200) DEFAULT NULL,
  `OtherRecords` varchar(1000) DEFAULT NULL,
  `DateModified` timestamp NULL DEFAULT NULL,
  `POnumber` varchar(50) DEFAULT NULL,
  `Specs` varchar(500) DEFAULT NULL,
  PRIMARY KEY (`SKU`),
  UNIQUE KEY `SKU` (`SKU`),
  UNIQUE KEY `SN` (`SN`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci


SN
PN
UPC
Grade
Location
POnumber
Specs

when adding new user, first try to add it into the database, then add to the arraylist and update
probably add button to refresh

Platform.runLater(() -> {
//            userLbl.setMinHeight(userTextF.getHeight());
        });


java --module-path "C:\Program Files\Eclipse Adoptium\libsss\javafx-sdk-11.0.2\lib" --add-modules=javafx.controls,javafx.media,javafx.fxml -jar intent.jar

java --module-path "C:\STUFF\prog\JAVA\intent\out\artifacts\intent_jar5\javafx-sdk-11.0.2\lib" --add-modules=javafx.controls,javafx.media,javafx.fxml -jar intent.jar

java --module-path "C:\STUFF\prog\JAVA\intent\out\artifacts\intent_jar5\javafx-sdk-11.0.2\lib" --add-modules=javafx.controls,javafx.media,javafx.fxml -jar D:\Download\intent_jar5\intent.jar

java -jar intent.jar

C:\Windows\System32\cmd.exe /k java --module-path "C:\Program Files\Intent Database 1.0.0\javafx-sdk-11.0.2\lib" --add-modules=javafx.controls,javafx.media,javafx.fxml -jar "C:\Program Files\Intent Database 1.0.0\intent.jar" & exit


+----------------------------------------------------------+
|+--------------------------------------------------------+|
||                                                        ||
||  Don't close this command-line window!                 ||
||  Closing it will exit the intent-database application  ||
||                                                        ||
|+--------------------------------------------------------+|
+----------------------------------------------------------+

+----------------------------------------------------------------+
| +------------------------------------------------------------+ |
| | +--------------------------------------------------------+ | |
| | |                                                        | | |
| | |  Don't close this command-line window!                 | | |
| | |  Closing it will exit the intent-database application  | | |
| | |                                                        | | |
| | +--------------------------------------------------------+ | |
| +------------------------------------------------------------+ |
+----------------------------------------------------------------+




=IMPORTXML("https://en.wikipedia.org/wiki/Moon_landing", "//title")


java.io.IOException: Zip bomb detected! The file would exceed the max. ratio of compressed file size to the size of the expanded data.
This may indicate that the file is used to inflate memory usage and thus could pose a security risk.
You can adjust this limit via ZipSecureFile.setMinInflateRatio() if you need to work with files which exceed this limit.
Uncompressed size: 104589, Raw/compressed size: 1041, ratio: 0.009953
Limits: MIN_INFLATE_RATIO: 0.010000, Entry: xl/styles.xml
	at org.apache.poi.openxml4j.util.ZipArchiveThresholdInputStream.checkThreshold(ZipArchiveThresholdInputStream.java:143)
	at org.apache.poi.openxml4j.util.ZipArchiveThresholdInputStream.read(ZipArchiveThresholdInputStream.java:82)
	at org.apache.poi.util.IOUtils.toByteArray(IOUtils.java:240)
	at org.apache.poi.util.IOUtils.toByteArray(IOUtils.java:203)
	at org.apache.poi.openxml4j.util.ZipArchiveFakeEntry.<init>(ZipArchiveFakeEntry.java:82)
	at org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource.<init>(ZipInputStreamZipEntrySource.java:98)
	at org.apache.poi.openxml4j.opc.ZipPackage.<init>(ZipPackage.java:132)
	at org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:312)
	at org.apache.poi.ooxml.util.PackageHelper.open(PackageHelper.java:59)
	at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:289)
	at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:285)
	at ImportPreviewWindow.lambda$importBtnAction$7(ImportPreviewWindow.java:240)
	at java.base/java.lang.Thread.run(Thread.java:834)
Exception in thread "Thread-5" java.lang.IllegalStateException: Not on FX application thread; currentThread = Thread-5
	at javafx.graphics/com.sun.javafx.tk.Toolkit.checkFxUserThread(Toolkit.java:291)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.checkFxUserThread(QuantumToolkit.java:424)
	at javafx.graphics/javafx.stage.Stage.<init>(Stage.java:254)
	at javafx.graphics/javafx.stage.Stage.<init>(Stage.java:240)
	at javafx.controls/javafx.scene.control.HeavyweightDialog$1.<init>(HeavyweightDialog.java:52)
	at javafx.controls/javafx.scene.control.HeavyweightDialog.<init>(HeavyweightDialog.java:52)
	at javafx.controls/javafx.scene.control.Dialog.<init>(Dialog.java:267)
	at javafx.controls/javafx.scene.control.Alert.<init>(Alert.java:245)
	at javafx.controls/javafx.scene.control.Alert.<init>(Alert.java:220)
	at MainPage.ioErrorAlert(MainPage.java:680)
	at ImportPreviewWindow.lambda$importBtnAction$7(ImportPreviewWindow.java:567)
	at java.base/java.lang.Thread.run(Thread.java:834)

CREATE TABLE `actions` (
  `User` varchar(50) NOT NULL,
  `Date` date NOT NULL,
  `Log` varchar(3000) DEFAULT NULL,
  CONSTRAINT `User_Date` PRIMARY KEY (`User`,`Date`),
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci

CREATE TABLE `products`.`useractions` (
  `User` varchar(50) NOT NULL,
  `Date` date NOT NULL,
  `Log` varchar(3000) DEFAULT NULL,
  CONSTRAINT `User_Date` PRIMARY KEY (`User`,`Date`));

  SET GLOBAL authentication_policy='mysql_native_password';



Done:
- esc button exits editing or previewing of elements (adding mode works too now)
- Changes are saved with old value record for Pn, location, grade, po#
- create admin and user role lol
- make current user label
- addit methods use one instance
- Generating SKU for custom items
- redesign statuses, so that they show and disappear (when need to show, it shows the needed one and hides all the other ones; after a few seconds it shows the other one)
- add details what was added to history
- buttons allocation UI
- Location confirmation on saving changes
- Changing location for many elements functionality for admin
- fix item preview closing on esc
- make user activity showing by 14, 30 or any number of days + show days on record   + refresh btn


List of tasks:

- Showing errors while import
- when importing, if error sku then use another sku
- change proportions of panes in the add item window

- create sql script for initial creation of users
- script to delete empty folders

More advanced:
- excel problems
- clean code
- editing images
- more advanced printing

test al importnt feratures
- edit generating nums in import: it checks resultsets finding the right one and remembers it; at the end it commits the new SKU to the cell
- disable auto-commit there

sometimes might need update authentication policy

- do tests how should i update data

a307 b307


SET GLOBAL authentication_policy='mysql_native_password';
CREATE USER 'admin'@'%' IDENTIFIED WITH mysql_native_password BY '658etra'
FLUSH PRIVILEGES;
GRANT SELECT,INSERT, DELETE, UPDATE, CREATE USER, ALTER, RELOAD ON *.* TO 'admin'@'%' WITH GRANT OPTION;
FLUSH PRIVILEGES;






















Developed a Java application that keeps track of items in the warehouse, stores images, prints labels for items, keeps history of refurbishing an item and manages users

Developed a Java application that keeps track of items in the refurbishing department and shows the activity of each worker. It allows workers to record the process of refurbishing an item, store images of it, see the history of previous changes made and automatically print labels for the item. For managers, there is functionality to import and export data in .xlsx format and see each worker's productivity.
Technologies: MySQL, SQLite, file management, multithreading, command prompt


